@model Resolv.Web.Models.AssessmentSite
@{
    ViewData["Title"] = "Create Assessment Site";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">Create Holding Company</li>
        <li class="breadcrumb-item">Create Division</li>
        <li class="breadcrumb-item active" aria-current="page">Create Assessment Site</li>
    </ol>
</nav>
<h2 class="mb-4">Create Assessment Site</h2>
<style>
    .site-row:hover {
        background-color: #f8f9fa;
        cursor: pointer;
    }

    .site-row.selected {
        background-color: #e3f2fd;
    }

    #cancelButton {
        display: none;
    }
</style>

<form asp-action="CreateAssessmentSite" method="post" class="needs-validation" novalidate>
    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Holding Company</label>
        <div class="col-md-10 pt-2">
            @ViewBag.HoldingName
        </div>
    </div>
    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Division</label>
        <div class="col-md-10 pt-2">
            @ViewBag.Division
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="Name" class="col-md-2 col-form-label">Site Name</label>
        <div class="col-md-10">
            <input asp-for="SiteName" class="form-control" />
            <span asp-validation-for="SiteName" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="IdentityCode" class="col-md-2 col-form-label">Identity Code</label>
        <div class="col-md-10">
            <input asp-for="IdentityCode" class="form-control" />
            <span asp-validation-for="IdentityCode" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="RefCode" class="col-md-2 col-form-label">Reference Code</label>
        <div class="col-md-10">
            <input asp-for="RefCode" class="form-control" />
            <span asp-validation-for="RefCode" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="Address" class="col-md-2 col-form-label">Address</label>
        <div class="col-md-10">
            <input asp-for="Address" class="form-control" />
            <span asp-validation-for="Address" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="ProvinceId" class="col-md-2 col-form-label">Province</label>
        <div class="col-md-10">
            <select asp-for="ProvinceId" asp-items="ViewBag.Province" class="form-control">
            </select>
            <span asp-validation-for="ProvinceId" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="TownId" class="col-md-2 col-form-label">Town</label>
        <div class="col-md-10">
            <select asp-for="TownId" asp-items="ViewBag.Towns" class="form-control">
                <option value="">Please select a province first</option>
            </select>
            <span asp-validation-for="TownId" class="text-danger"></span>
        </div>
    </div>

    <div class="form-group row">
        <div class="offset-md-2 col-md-10 d-flex gap-2">
            <a asp-controller="Onboard" asp-action="CreateDivision"
                asp-route-holdingcompanyuid="@ViewBag.HoldingCompanyUid" class="btn btn-secondary">Back</a>
            <button type="button" id="cancelButton" class="btn btn-secondary">Cancel</button>
            <button type="submit" id="submitButton" class="btn btn-primary">Save</button>
        </div>
    </div>
    <input type="hidden" asp-for="DivisionUid" value="@ViewBag.DivisionUid" />
    <input type="hidden" asp-for="HoldingCompanyUid" value="@ViewBag.HoldingCompanyUid" />
    <input type="hidden" asp-for="Id" id="siteId" />
</form>

<hr />
<h3>Existing Assessment Sites</h3>
@if (ViewBag.AssessmentSites != null)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Name</th>
                <th>Insert Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var site in ViewBag.AssessmentSites)
            {
                <tr class="site-row" 
                    data-site-id="@site.Uid" 
                    data-site-name="@site.SiteName"
                    data-identity-code="@site.IdentityCode" 
                    data-ref-code="@site.RefCode" 
                    data-address="@site.Address"
                    data-province-id="@site.ProvinceId" 
                    data-town-id="@site.TownId">
                    <td>@site.SiteName</td>
                    <td>@site.InsertDate.ToString("dd/MM/yyyy")</td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            var $provinceSelect = $('select[name="ProvinceId"]');
            var $townSelect = $('select[name="TownId"]');
            var $siteName = $('#SiteName');
            var $identityCode = $('#IdentityCode');
            var $refCode = $('#RefCode');
            var $address = $('#Address');
            var $siteId = $('#siteId');
            var $submitButton = $('#submitButton');
            var $cancelButton = $('#cancelButton');

            var originalState = {
                siteName: $siteName.val(),
                identityCode: $identityCode.val(),
                refCode: $refCode.val(),
                address: $address.val(),
                provinceId: $provinceSelect.val(),
                townId: $townSelect.val(),
                id: $siteId.val(),
                submitText: $submitButton.text()
            };

            // Function to load towns for a given province
            function loadTowns(provinceId, selectedTownId) {
                if (!provinceId || provinceId === '0') {
                    $townSelect.html('<option value="">Please select a province first</option>').prop('disabled', true);
                    return;
                }
                $townSelect.html('<option value="">Loading towns...</option>').prop('disabled', true);
                $.ajax({
                    url: '/Onboard/GetTown',
                    type: 'GET',
                    data: { provinceId: provinceId },
                    success: function (towns) {
                        $townSelect.empty();
                        $townSelect.append('<option value="">Please select</option>');
                        $.each(towns, function (index, town) {
                            var option = $('<option value="' + town.id + '">' + town.name + '</option>');
                            if (selectedTownId && selectedTownId == town.id) {
                                option.prop('selected', true);
                            }
                            $townSelect.append(option);
                        });
                        $townSelect.prop('disabled', false);
                    },
                    error: function () {
                        console.error('Error fetching towns');
                        $townSelect.html('<option value="">Error loading towns</option>').prop('disabled', true);
                    }
                });
            }

            // Initialize on page load
            var initialProvinceId = $provinceSelect.val();
            var initialTownId = $townSelect.val();
            if (initialProvinceId && initialProvinceId !== '0') {
                if ($townSelect.find('option').length > 1) {
                    $townSelect.prop('disabled', false);
                } else {
                    loadTowns(initialProvinceId, initialTownId);
                }
            } else {
                $townSelect.html('<option value="">Please select a province first</option>').prop('disabled', true);
            }

            $provinceSelect.on('change', function () {
                var provinceId = $(this).val();
                loadTowns(provinceId);
            });

            // Handle row click for editing
            $('.site-row').on('click', function () {
                $('.site-row').removeClass('selected');
                $(this).addClass('selected');

                var siteId = $(this).data('site-id');
                var siteName = $(this).data('site-name');
                var identityCode = $(this).data('identity-code');
                var refCode = $(this).data('ref-code');
                var address = $(this).data('address');
                var provinceId = $(this).data('province-id');
                var townId = $(this).data('town-id');

                $siteId.val(siteId);
                $siteName.val(siteName);
                $identityCode.val(identityCode);
                $refCode.val(refCode);
                $address.val(address);
                $provinceSelect.val(provinceId);
                loadTowns(provinceId, townId);

                $submitButton.text('Update');
                $cancelButton.show();
            });

            // Handle cancel button
            $cancelButton.on('click', function () {
                $siteId.val(originalState.id);
                $siteName.val(originalState.siteName);
                $identityCode.val(originalState.identityCode);
                $refCode.val(originalState.refCode);
                $address.val(originalState.address);
                $provinceSelect.val(originalState.provinceId);
                loadTowns(originalState.provinceId, originalState.townId);
                $submitButton.text(originalState.submitText);
                $cancelButton.hide();
                $('.site-row').removeClass('selected');
            });
        });
    </script>
}