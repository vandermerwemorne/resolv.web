@model Resolv.Web.Models.AssessmentSite
@{
    ViewData["Title"] = "Create Assessment Site";
}
<nav aria-label="breadcrumb">
    <ol class="breadcrumb">
        <li class="breadcrumb-item">Create Holding Company</li>
        <li class="breadcrumb-item">Create Division</li>
        <li class="breadcrumb-item active" aria-current="page">Create Assessment Site</li>
    </ol>
</nav>
<h2 class="mb-4">Create Assessment Site</h2>
<form asp-action="CreateAssessmentSite" method="post" class="needs-validation" novalidate>
    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Holding Company</label>
        <div class="col-md-10 pt-2">
            @ViewBag.HoldingName
        </div>
    </div>
    <div class="form-group row mb-3">
        <label class="col-md-2 col-form-label">Division</label>
        <div class="col-md-10 pt-2">
            @ViewBag.Division
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="Name" class="col-md-2 col-form-label">Site Name</label>
        <div class="col-md-10">
            <input asp-for="SiteName" class="form-control" />
            <span asp-validation-for="SiteName" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="IdentityCode" class="col-md-2 col-form-label">Identity Code</label>
        <div class="col-md-10">
            <input asp-for="IdentityCode" class="form-control" />
            <span asp-validation-for="IdentityCode" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="RefCode" class="col-md-2 col-form-label">Reference Code</label>
        <div class="col-md-10">
            <input asp-for="RefCode" class="form-control" />
            <span asp-validation-for="RefCode" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="Address" class="col-md-2 col-form-label">Address</label>
        <div class="col-md-10">
            <input asp-for="Address" class="form-control" />
            <span asp-validation-for="Address" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="ProvinceId" class="col-md-2 col-form-label">Province</label>
        <div class="col-md-10">
            <select asp-for="ProvinceId" asp-items="ViewBag.Province" class="form-control">
            </select>
            <span asp-validation-for="ProvinceId" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row mb-3">
        <label for="TownId" class="col-md-2 col-form-label">Town</label>
        <div class="col-md-10">
            <select asp-for="TownId" asp-items="ViewBag.Towns" class="form-control">
                <option value="">Please select a province first</option>
            </select>
            <span asp-validation-for="TownId" class="text-danger"></span>
        </div>
    </div>
    <div class="form-group row">
        <div class="offset-md-2 col-md-10 d-flex gap-2">
            <a asp-controller="Onboard" asp-action="CreateDivision"
                asp-route-holdingcompanyuid="@ViewBag.HoldingCompanyUid" class="btn btn-secondary">Back</a>

            <button type="submit" class="btn btn-primary">Save</button>
        </div>
    </div>
    <input type="hidden" asp-for="DivisionUid" value="@ViewBag.DivisionUid" />
    <input type="hidden" asp-for="HoldingCompanyUid" value="@ViewBag.HoldingCompanyUid" />
</form>

<hr />
<h3>Existing Assessment Sites</h3>
@if (ViewBag.AssessmentSites != null)
{
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Name</th>
                <th>Insert Date</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var division in ViewBag.AssessmentSites)
            {
                <tr>
                    <td>@division.SiteName</td>
                    <td>@division.InsertDate.ToString("dd/MM/yyyy")</td>
                </tr>
            }
        </tbody>
    </table>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            var $provinceSelect = $('select[name="ProvinceId"]');
            var $townSelect = $('select[name="TownId"]');
            var initialTownId = $townSelect.val(); // Store initial TownId for validation error scenarios

            // Function to load towns for a given province
            function loadTowns(provinceId, selectedTownId) {
                if (!provinceId || provinceId === '0') {
                    $townSelect.html('<option value="">Please select a province first</option>').prop('disabled', true);
                    return;
                }

                // Show loading state
                $townSelect.html('<option value="">Loading towns...</option>').prop('disabled', true);

                // Make AJAX call to GetTown endpoint
                $.ajax({
                    url: '/Onboard/GetTown',
                    type: 'GET',
                    data: { provinceId: provinceId },
                    success: function (towns) {
                        // Clear existing options
                        $townSelect.empty();

                        // Add default option
                        $townSelect.append('<option value="">Please select</option>');

                        // Add town options
                        $.each(towns, function (index, town) {
                            var option = $('<option value="' + town.id + '">' + town.name + '</option>');
                            if (selectedTownId && selectedTownId == town.id) {
                                option.prop('selected', true);
                            }
                            $townSelect.append(option);
                        });

                        $townSelect.prop('disabled', false);
                    },
                    error: function () {
                        console.error('Error fetching towns');
                        $townSelect.html('<option value="">Error loading towns</option>').prop('disabled', true);
                    }
                });
            }

            // Initialize on page load
            var initialProvinceId = $provinceSelect.val();
            if (initialProvinceId && initialProvinceId !== '0') {
                // If we already have towns from server (validation error scenario), enable the dropdown
                if ($townSelect.find('option').length > 1) {
                    $townSelect.prop('disabled', false);
                } else {
                    // Otherwise load them via AJAX
                    loadTowns(initialProvinceId, initialTownId);
                }
            } else {
                // No province selected, disable town select
                $townSelect.html('<option value="">Please select a province first</option>').prop('disabled', true);
            }

            // Handle province change
            $provinceSelect.on('change', function () {
                var provinceId = $(this).val();
                loadTowns(provinceId);
            });
        });
    </script>
}