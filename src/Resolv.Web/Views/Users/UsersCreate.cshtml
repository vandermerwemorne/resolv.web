@model Resolv.Web.Models.User
@{
    ViewData["Title"] = "Manage Users";
}

<style>
    .user-row:hover {
        background-color: #f8f9fa;
        cursor: pointer;
    }

    .user-row.selected {
        background-color: #e3f2fd;
    }

    #cancelButton {
        display: none;
    }
</style>

<h2 class="mb-4">Manage Users</h2>

<div class="alert alert-info" role="alert">
    <h6 class="alert-heading mb-2">
        <i class="fas fa-info-circle"></i> Password Information
    </h6>
    <p class="mb-1">
        All new users are created with the default password <strong>"Password1"</strong>.
        When you select "Reset Password" for existing users, their password will be reset back to
        <strong>"Password1"</strong>.
    </p>
    <p class="mb-0">
        Users with the default password will be prompted to change their password when they next log in.
    </p>
</div>

<div class="form-group row mb-4">
    <label for="SelectedHoldingCompanyUid" class="col-md-3">Company Name</label>
    <div class="col-md-9">
        @ViewBag.SelectedHoldingCompanyName
    </div>
</div>

<div class="mb-4">
    <h5 class="mb-3" id="formTitle">Add New User</h5>
    <form asp-action="UsersCreate" method="post" autocomplete="off">
        <div asp-validation-summary="All" class="alert alert-danger"
            style="display: @(ViewData.ModelState.IsValid ? "none" : "block")"></div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="FullName" class="form-label">Full Name <span class="text-danger">*</span></label>
                    <input asp-for="FullName" class="form-control" autocomplete="off" />
                    <span asp-validation-for="FullName" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="Email" class="form-label">Email Address <span class="text-danger">*</span></label>
                    <input asp-for="Email" type="email" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Email" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <label for="KnownName" class="form-label">Known Name</label>
                    <input asp-for="KnownName" class="form-control" autocomplete="off" />
                    <span asp-validation-for="KnownName" class="text-danger"></span>
                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group mb-3">
                    <label for="Roles" class="form-label">Roles</label>
                    <input asp-for="Roles" class="form-control" autocomplete="off" />
                    <span asp-validation-for="Roles" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <div class="form-check">
                        <input asp-for="HasAccess" class="form-check-input" type="checkbox" />
                        <label class="form-check-label" for="HasAccess">
                            User has system access
                        </label>
                    </div>
                    <span asp-validation-for="HasAccess" class="text-danger"></span>
                </div>

                <div class="form-group mb-3">
                    <div class="form-check">
                        <input asp-for="ResetPassword" class="form-check-input" type="checkbox" />
                        <label class="form-check-label" for="ResetPassword">
                            Reset Password
                        </label>
                    </div>
                    <span asp-validation-for="ResetPassword" class="text-danger"></span>
                </div>

                <div class="d-flex gap-2">
                    <button type="button" id="cancelButton" class="btn btn-secondary">Cancel</button>
                    <button type="submit" id="submitButton" class="btn btn-primary">Save User</button>
                </div>
            </div>
        </div>

        <!-- Hidden Fields -->
        <input type="hidden" asp-for="Id" id="userId" />
        <input type="hidden" asp-for="SelectedHoldingCompanyUid" />
    </form>
</div>

<!-- Users List Section -->
<div>
    <h5 class="mb-3">Existing Users</h5>
    @if (ViewBag.Users != null && ViewBag.Users.Count > 0)
    {
        <div class="table-responsive">
            <table class="table table-hover">
                <thead>
                    <tr>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>Known Name</th>
                        <th>Access</th>
                        <th>Created</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in ViewBag.Users)
                    {
                        <tr class="user-row" data-user-id="@user.Uid" data-full-name="@user.FullName" data-email="@user.Email"
                            data-known-name="@user.KnownName" data-roles="@user.Roles"
                            data-has-access="@user.HasAccess.ToString().ToLower()">
                            <td>@user.FullName</td>
                            <td>@user.Email</td>
                            <td>@user.KnownName</td>
                            <td>
                                @if (user.HasAccess)
                                {
                                    <span class="badge bg-success">Yes</span>
                                }
                                else
                                {
                                    <span class="badge bg-danger">No</span>
                                }
                            </td>
                            <td>@user.InsertDate.ToString("dd/MM/yyyy")</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
    else
    {
        <div class="text-center text-muted py-4">
            <i class="fas fa-users fa-3x mb-3"></i>
            <p>No users found for this holding company.</p>
            <p class="small">Add your first user using the form above.</p>
        </div>
    }
</div>

@section Scripts {
    <script>
        $(document).ready(function () {
            const $form = $('form');
            const $submitButton = $('#submitButton');
            const $cancelButton = $('#cancelButton');
            const $formTitle = $('#formTitle');

            // Store original form state
            const originalState = {
                submitText: $submitButton.text(),
                formTitle: $formTitle.text()
            };

            // Handle user row click for editing
            $('.user-row').on('click', function () {
                $('.user-row').removeClass('selected');
                $(this).addClass('selected');

                // Populate form with user data
                const $row = $(this);
                $('#FullName').val($row.data('full-name'));
                $('#Email').val($row.data('email'));
                $('#KnownName').val($row.data('known-name'));
                $('#Roles').val($row.data('roles'));

                // Handle checkbox - ensure proper boolean conversion
                const hasAccess = $row.data('has-access');
                $('#HasAccess').prop('checked', hasAccess === true || hasAccess === 'true' || hasAccess === 'True');

                // Reset the ResetPassword checkbox to unchecked for edit mode
                $('#ResetPassword').prop('checked', false);

                $('#userId').val($row.data('user-id'));

                // Switch to update mode
                $submitButton.text('Update User');
                $formTitle.text('Edit User');
                $cancelButton.show();
            });

            // Handle cancel button - reset to create mode
            $cancelButton.on('click', function () {
                $form[0].reset();
                $('#userId').val('');
                $submitButton.text(originalState.submitText);
                $formTitle.text(originalState.formTitle);
                $cancelButton.hide();
                $('.user-row').removeClass('selected');
            });
        });
    </script>

    @* Include ASP.NET Core's client-side validation scripts *@
    <partial name="_ValidationScriptsPartial" />
}